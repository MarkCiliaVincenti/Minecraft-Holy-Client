<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:sys="using:System"
					xmlns:custom="using:HolyClient.CustomControls"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<Design.PreviewWith>
		<Border Padding="24">
			<Border Height="100" Width="100" CornerRadius="25"/>
		</Border>
	</Design.PreviewWith>


	<ControlTheme x:Key="{x:Type Border}" TargetType="Border">
		<Style Selector="^.SettingItem">
			<Setter Property="Margin" Value="5,5,20,10"/>
			<Setter Property="Effect">
				<Setter.Value>					
					<DropShadowEffect Color="{DynamicResource SolidBackgroundFillColorSecondary}"  Opacity="0.35" BlurRadius="20"/>
				</Setter.Value>
			</Setter>

			<Setter Property="Padding" Value="10"/>
			<Setter Property="CornerRadius" Value="7"/>
			<Setter Property="Background" Value="{DynamicResource SolidBackgroundFillColorQuarternary}"/>
		</Style>
	</ControlTheme>
	<ControlTheme x:Key="Shimmer" TargetType="Border">
		
	</ControlTheme>
	<ControlTheme x:Key="{x:Type AcrylicContentControl}" TargetType="AcrylicContentControl">
		<Setter Property="Template">
			<ControlTemplate>
				<ContentPresenter Name="PART_ContentPresenter"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  CornerRadius="{TemplateBinding CornerRadius}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  Padding="{TemplateBinding Padding}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"/>
			</ControlTemplate>
		</Setter>
	</ControlTheme>
	<ControlTheme x:Key="Test" TargetType="Window">
		<Setter Property="Background" Value="{DynamicResource ApplicationPageBackgroundThemeBrush}"/>
		<Setter Property="TransparencyBackgroundFallback" Value="{DynamicResource ApplicationPageBackgroundThemeBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}"/>
		<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
		<Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
		<Setter Property="Template">
			<ControlTemplate>
				<Panel>
					<Border Name="PART_TransparencyFallback" IsHitTestVisible="False" />
					<Border Background="{TemplateBinding Background}" IsHitTestVisible="False" />
					<Panel Background="Transparent" Margin="{TemplateBinding WindowDecorationMargin}" />
					<VisualLayerManager>
						<VisualLayerManager.ChromeOverlayLayer>
							<TitleBar />
						</VisualLayerManager.ChromeOverlayLayer>
						<ContentPresenter Name="PART_ContentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</VisualLayerManager>
				</Panel>
			</ControlTemplate>
		</Setter>
	</ControlTheme>


	<ControlTheme x:Key="{x:Type FillStackPanel}" TargetType="FillStackPanel">
		<Setter Property="Template">
			<ControlTemplate>
				<StackPanel Spacing="10" Name="PART_StackPanel"/>
			</ControlTemplate>
		</Setter>
	</ControlTheme>


	<ControlTheme x:Key="TooltipDataValidationErrors"
					 TargetType="DataValidationErrors">
		<Setter Property="Template">
			<ControlTemplate TargetType="DataValidationErrors">
				<DockPanel LastChildFill="True">
					<ContentControl Content="{Binding (DataValidationErrors.Errors)}"
                                    ContentTemplate="{TemplateBinding ErrorTemplate}"
                                    DataContext="{TemplateBinding Owner}"
                                    DockPanel.Dock="Right"
                                    IsVisible="{Binding (DataValidationErrors.HasErrors)}" />
					<ContentPresenter Name="PART_ContentPresenter"
                                      Padding="{TemplateBinding Padding}"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      CornerRadius="{TemplateBinding CornerRadius}" />
				</DockPanel>
			</ControlTemplate>
		</Setter>
		<Setter Property="ErrorTemplate">
			<DataTemplate>
				<Panel Name="PART_InlineErrorTemplatePanel"
                       Background="Transparent">
					<Panel.Styles>
						<Style Selector="Panel#PART_InlineErrorTemplatePanel">
							<Setter Property="Margin" Value="8,0" />
						</Style>
						<Style Selector="Panel#PART_InlineErrorTemplatePanel ToolTip">
							<Setter Property="BorderBrush" Value="{DynamicResource SystemFillColorCriticalBrush}" />
						</Style>
						<Style Selector="Panel#PART_InlineErrorTemplatePanel ToolTip TextBlock">
							<Setter Property="TextWrapping" Value="WrapWithOverflow" />
						</Style>
					</Panel.Styles>
					<ToolTip.Tip>
						<ItemsControl ItemsSource="{ReflectionBinding}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<TextBlock Text="{Tr {Binding}}"/>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</ToolTip.Tip>
					<Path Width="14"
                          Height="14"
                          Data="M14,7 A7,7 0 0,0 0,7 M0,7 A7,7 0 1,0 14,7 M7,3l0,5 M7,9l0,2"
                          Stroke="{DynamicResource SystemFillColorCriticalBrush}"
                          StrokeThickness="2" />
				</Panel>
			</DataTemplate>
		</Setter>
	</ControlTheme>
	
<!--

	<ControlTheme x:Key="{x:Type SplitView}" TargetType="SplitView">
		<Setter Property="OpenPaneLength" Value="{DynamicResource SplitViewOpenPaneThemeLength}" />
		<Setter Property="CompactPaneLength" Value="{DynamicResource SplitViewCompactPaneThemeLength}" />
		<Setter Property="PaneBackground" Value="{DynamicResource SystemControlPageBackgroundChromeLowBrush}" />

		<Style Selector="^:left">
			<Setter Property="Template">
				<ControlTemplate>
					<Grid Name="Container" Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							
							<ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneColumnGridLength}"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>

						<Panel Name="PART_PaneRoot"
							   Background="{TemplateBinding PaneBackground}"
							   ClipToBounds="True"
							   HorizontalAlignment="Left"
							   ZIndex="100">
							<ContentPresenter x:Name="PART_PanePresenter"
											  Content="{TemplateBinding Pane}"
											  ContentTemplate="{TemplateBinding PaneTemplate}" />
							<Rectangle Name="HCPaneBorder"
									   Fill="{DynamicResource SystemControlForegroundTransparentBrush}"
									   Width="1"
									   HorizontalAlignment="Right"  />
						</Panel>

						<Panel Name="ContentRoot">
							<ContentPresenter x:Name="PART_ContentPresenter"
											  Content="{TemplateBinding Content}"
											  ContentTemplate="{TemplateBinding ContentTemplate}" />
							<Rectangle Name="LightDismissLayer"
									   Fill="Transparent"
									   IsVisible="False"/>
						</Panel>

					</Grid>
				</ControlTemplate>
			</Setter>

			<Style Selector="^:overlay">
				<Style Selector="^ /template/ Panel#PART_PaneRoot">
					<Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ClosedPaneWidth}" />
					<Setter Property="Grid.ColumnSpan" Value="1"/>
					<Setter Property="Grid.Column" Value="0"/>
				</Style>
				<Style Selector="^ /template/ Panel#ContentRoot">
					<Setter Property="Grid.Column" Value="1"/>
					<Setter Property="Grid.ColumnSpan" Value="2"/>
				</Style>
			</Style>

			<Style Selector="^:compactinline">
				<Style Selector="^ /template/ Panel#PART_PaneRoot">
					<Setter Property="Grid.ColumnSpan" Value="1"/>
					<Setter Property="Grid.Column" Value="0"/>
					<Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ClosedPaneWidth}" />
				</Style>
				<Style Selector="^ /template/ Panel#ContentRoot">
					<Setter Property="Grid.Column" Value="1"/>
					<Setter Property="Grid.ColumnSpan" Value="1"/>
				</Style>
			</Style>

			<Style Selector="^:compactoverlay">
				<Style Selector="^ /template/ Panel#PART_PaneRoot">
					
					<Setter Property="Grid.ColumnSpan" Value="1"/>
					<Setter Property="Grid.Column" Value="0"/>
					<Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ClosedPaneWidth}" />
				</Style>
				<Style Selector="^ /template/ Panel#ContentRoot">
					<Setter Property="Grid.Column" Value="1"/>
					<Setter Property="Grid.ColumnSpan" Value="1"/>
				</Style>
			</Style>

			<Style Selector="^:inline">
				<Style Selector="^ /template/ Panel#PART_PaneRoot">
					<Setter Property="Grid.ColumnSpan" Value="1"/>
					<Setter Property="Grid.Column" Value="0"/>
					<Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ClosedPaneWidth}" />
				</Style>
				<Style Selector="^ /template/ Panel#ContentRoot">
					<Setter Property="Grid.Column" Value="1"/>
					<Setter Property="Grid.ColumnSpan" Value="1"/>
				</Style>
			</Style>
		</Style>


		<Style Selector="^:open">
			<Style Selector="^ /template/ Panel#PART_PaneRoot">
				<Setter Property="Transitions">
					<Transitions>
						<DoubleTransition Property="Width"
										  Duration="{StaticResource SplitViewPaneAnimationOpenDuration}"
										  Easing="{StaticResource SplitViewPaneAnimationEasing}" />
					</Transitions>
				</Setter>
				<Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=OpenPaneLength}" />
			</Style>
			<Style Selector="^ /template/ Rectangle#LightDismissLayer">
				<Setter Property="Transitions">
					<Transitions>
						<DoubleTransition Property="Opacity"
										  Duration="{StaticResource SplitViewPaneAnimationOpenDuration}"
										  Easing="{StaticResource SplitViewPaneAnimationEasing}" />
					</Transitions>
				</Setter>
				<Setter Property="Opacity" Value="1.0"/>
			</Style>
		</Style>

		<Style Selector="^:closed">
			<Style Selector="^ /template/ Panel#PART_PaneRoot">
				<Setter Property="Transitions">
					<Transitions>
						<DoubleTransition Property="Width" Duration="{StaticResource SplitViewPaneAnimationCloseDuration}" Easing="{StaticResource SplitViewPaneAnimationEasing}" />
					</Transitions>
				</Setter>
				<Setter Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.ClosedPaneWidth}" />
			</Style>
			<Style Selector="^ /template/ Rectangle#LightDismissLayer">
				<Setter Property="Transitions">
					<Transitions>
						<DoubleTransition Property="Opacity" Duration="{StaticResource SplitViewPaneAnimationCloseDuration}" Easing="{StaticResource SplitViewPaneAnimationEasing}" />
					</Transitions>
				</Setter>
				<Setter Property="Opacity" Value="0.0"/>
			</Style>
		</Style>


		<Style Selector="^:lightdismiss /template/ Rectangle#LightDismissLayer">
			<Setter Property="Fill" Value="{DynamicResource SplitViewLightDismissOverlayBackground}" />
		</Style>
		<Style Selector="^:overlay:open /template/ Rectangle#LightDismissLayer">
			<Setter Property="IsVisible" Value="True"/>
		</Style>
		<Style Selector="^:compactoverlay:open /template/ Rectangle#LightDismissLayer">
			<Setter Property="IsVisible" Value="True"/>
		</Style>
		
	</ControlTheme>
	-->


</ResourceDictionary>
