namespace McProtoNet
{
	public class PacketPalette_1_17 : IPacketPallete
	{
		private readonly Dictionary<int, PacketIn> typeIn = new()
		{
			  { 0x00, PacketIn.SpawnEntity },
			{ 0x01, PacketIn.SpawnExperienceOrb },
			{ 0x02, PacketIn.SpawnLivingEntity },
			{ 0x03, PacketIn.SpawnPainting },
			{ 0x04, PacketIn.SpawnPlayer },
			{ 0x05, PacketIn.SkulkVibrationSignal },
			{ 0x06, PacketIn.EntityAnimation },
			{ 0x07, PacketIn.Statistics },
			{ 0x08, PacketIn.AcknowledgePlayerAction },
			{ 0x09, PacketIn.BlockBreakAnimation },
			{ 0x0A, PacketIn.BlockEntityData },
			{ 0x0B, PacketIn.BlockAction },
			{ 0x0C, PacketIn.BlockChange },
			{ 0x0D, PacketIn.BossBar },
			{ 0x0E, PacketIn.ServerDifficulty },
			{ 0x0F, PacketIn.ChatMessage },
			{ 0x10, PacketIn.ClearTiles },
			{ 0x11, PacketIn.TabComplete },
			{ 0x12, PacketIn.DeclareCommands },
			{ 0x13, PacketIn.CloseWindow },
			{ 0x14, PacketIn.WindowItems },
			{ 0x15, PacketIn.WindowProperty },
			{ 0x16, PacketIn.SetSlot },
			{ 0x17, PacketIn.SetCooldown },
			{ 0x18, PacketIn.PluginMessage },
			{ 0x19, PacketIn.NamedSoundEffect },
			{ 0x1A, PacketIn.Disconnect },
			{ 0x1B, PacketIn.EntityStatus },
			{ 0x1C, PacketIn.Explosion },
			{ 0x1D, PacketIn.UnloadChunk },
			{ 0x1E, PacketIn.ChangeGameState },
			{ 0x1F, PacketIn.OpenHorseWindow },
			{ 0x20, PacketIn.InitializeWorldBorder },
			{ 0x21, PacketIn.KeepAlive },
			{ 0x22, PacketIn.ChunkData },
			{ 0x23, PacketIn.Effect },
			{ 0x24, PacketIn.Particle },
			{ 0x25, PacketIn.UpdateLight },
			{ 0x26, PacketIn.JoinGame },
			{ 0x27, PacketIn.MapData },
			{ 0x28, PacketIn.TradeList },
			{ 0x29, PacketIn.EntityPosition },
			{ 0x2A, PacketIn.EntityPositionRotation },
			{ 0x2B, PacketIn.EntityRotation },
			{ 0x2C, PacketIn.VehicleMove },
			{ 0x2D, PacketIn.OpenBook },
			{ 0x2E, PacketIn.OpenWindow },
			{ 0x2F, PacketIn.OpenSignEditor },
			{ 0x30, PacketIn.Ping },
			{ 0x31, PacketIn.CraftRecipeResponse },
			{ 0x32, PacketIn.PlayerAbilities },
			{ 0x33, PacketIn.EndCombatEvent },
			{ 0x34, PacketIn.EnterCombatEvent },
			{ 0x35, PacketIn.DeathCombatEvent },
			{ 0x36, PacketIn.PlayerInfo },
			{ 0x37, PacketIn.FacePlayer },
			{ 0x38, PacketIn.PlayerPositionRotation },
			{ 0x39, PacketIn.UnlockRecipes },
			{ 0x3A, PacketIn.DestroyEntities },
			{ 0x3B, PacketIn.RemoveEntityEffect },
			{ 0x3C, PacketIn.ResourcePackSend },
			{ 0x3D, PacketIn.Respawn },
			{ 0x3E, PacketIn.EntityHeadLook },
			{ 0x3F, PacketIn.MultiBlockChange },
			{ 0x40, PacketIn.SelectAdvancementTab },
			{ 0x41, PacketIn.ActionBar },
			{ 0x42, PacketIn.WorldBorderCenter },
			{ 0x43, PacketIn.WorldBorderLerpSize },
			{ 0x44, PacketIn.WorldBorderSize },
			{ 0x45, PacketIn.WorldBorderWarningDelay },
			{ 0x46, PacketIn.WorldBorderWarningReach },
			{ 0x47, PacketIn.Camera },
			{ 0x48, PacketIn.HeldItemChange },
			{ 0x49, PacketIn.UpdateViewPosition },
			{ 0x4A, PacketIn.UpdateViewDistance },
			{ 0x4B, PacketIn.SpawnPosition },
			{ 0x4C, PacketIn.DisplayScoreboard },
			{ 0x4D, PacketIn.EntityMetadata },
			{ 0x4E, PacketIn.AttachEntity },
			{ 0x4F, PacketIn.EntityVelocity },
			{ 0x50, PacketIn.EntityEquipment },
			{ 0x51, PacketIn.SetExperience },
			{ 0x52, PacketIn.UpdateHealth },
			{ 0x53, PacketIn.ScoreboardObjective },
			{ 0x54, PacketIn.SetPassengers },
			{ 0x55, PacketIn.Teams },
			{ 0x56, PacketIn.UpdateScore },
			{ 0x57, PacketIn.SetTitleSubTitle },
			{ 0x58, PacketIn.TimeUpdate },
			{ 0x59, PacketIn.SetTitleText },
			{ 0x5A, PacketIn.SetTitleTime },
			{ 0x5B, PacketIn.EntitySoundEffect },
			{ 0x5C, PacketIn.SoundEffect },
			{ 0x5D, PacketIn.StopSound },
			{ 0x5E, PacketIn.PlayerListHeaderAndFooter },
			{ 0x5F, PacketIn.NBTQueryResponse },
			{ 0x60, PacketIn.CollectItem },
			{ 0x61, PacketIn.EntityTeleport },
			{ 0x62, PacketIn.Advancements },
			{ 0x63, PacketIn.EntityProperties },
			{ 0x64, PacketIn.EntityEffect },
			{ 0x65, PacketIn.DeclareRecipes },
			{ 0x66, PacketIn.Tags },
		};

		private readonly Dictionary<PacketOut, int> typeOut = new()
		{
			{ PacketOut.TeleportConfirm, 0x00 },
			{ PacketOut.QueryBlockNBT, 0x01 },
			{ PacketOut.SetDifficulty, 0x02 },
			{ PacketOut.ChatMessage, 0x03 },
			{ PacketOut.ClientStatus, 0x04 },
			{ PacketOut.ClientSettings, 0x05 },
			{ PacketOut.TabComplete, 0x06 },
			{ PacketOut.ClickWindowButton, 0x07 },
			{ PacketOut.ClickWindow, 0x08 },
			{ PacketOut.CloseWindow, 0x09 },
			{ PacketOut.PluginMessage, 0x0A },
			{ PacketOut.EditBook, 0x0B },
			{ PacketOut.EntityNBTRequest, 0x0C },
			{ PacketOut.InteractEntity, 0x0D },
			{ PacketOut.GenerateStructure, 0x0E },
			{ PacketOut.KeepAlive, 0x0F },
			{ PacketOut.LockDifficulty, 0x10 },
			{ PacketOut.PlayerPosition, 0x11 },
			{ PacketOut.PlayerPositionRotation, 0x12 },
			{ PacketOut.PlayerRotation, 0x13 },
			{ PacketOut.PlayerMovement, 0x14 },
			{ PacketOut.VehicleMove, 0x15 },
			{ PacketOut.SteerBoat, 0x16 },
			{ PacketOut.PickItem, 0x17 },
			{ PacketOut.CraftRecipeRequest, 0x18 },
			{ PacketOut.PlayerAbilities, 0x19 },
			{ PacketOut.PlayerAction, 0x1A },
			{ PacketOut.EntityAction, 0x1B },
			{ PacketOut.SteerVehicle, 0x1C },
			{ PacketOut.Pong, 0x1D },
			{ PacketOut.SetDisplayedRecipe, 0x1E },
			{ PacketOut.SetRecipeBookState, 0x1F },
			{ PacketOut.NameItem, 0x20 },
			{ PacketOut.ResourcePackStatus, 0x21 },
			{ PacketOut.AdvancementTab, 0x22 },
			{ PacketOut.SelectTrade, 0x23 },
			{ PacketOut.SetBeaconEffect, 0x24 },
			{ PacketOut.HeldItemChange, 0x25 },
			{ PacketOut.UpdateCommandBlock, 0x26 },
			{ PacketOut.UpdateCommandBlockMinecart, 0x27 },
			{ PacketOut.CreativeInventoryAction, 0x28 },
			{ PacketOut.UpdateJigsawBlock, 0x29 },
			{ PacketOut.UpdateStructureBlock, 0x2A },
			{ PacketOut.UpdateSign, 0x2B },
			{ PacketOut.Animation, 0x2C },
			{ PacketOut.Spectate, 0x2D },
			{ PacketOut.PlayerBlockPlacement, 0x2E },
			{ PacketOut.UseItem, 0x2F },
		};

		public int GetOut(PacketOut packet)
		{
			return typeOut[packet];
		}

		public bool TryGetIn(int id, out PacketIn packetIn)
		{
			if (typeIn.TryGetValue(id, out packetIn))
			{
				return true;
			}
			return false;
		}
	}
}
